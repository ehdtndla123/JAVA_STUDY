package chapter19;

public class chapter19 {
	//TCP 서버 클라이언ㄴ트 세가지 구현 방식
	
	/*
	 * 블로킹: 연결요쳥 연결수락 입출력 작업시 블로킹
	 * 넌블로킹: 연결요청 연결수락 입출력 작업시 넌블로킹
	 * 작업 처리 준비된 것만 셀렉터가 선택해서 처리하는 방식
	 * 
	 * 비동기: 연결요쳥 연결수락 입출력 작업시 넌블로킹
	 * 스레드풀에서 처리후 콜백 메소드 호출
	 * 
	 */
	
	
	//넌 블로킹 방식의 특징
	
	/*
	 * connect accept read write 메소드는 블로킹 없이 즉시 리턴된다
	 * 작업 처리 준비가 되지 않은 상태에서 이들 메소드를 실행해서는 안된다.
	 * 
	 * 따라서 작업 처리 준비가 된 채널만 선택해서 처리해야 한다.
	 * 
	 * 그러기 위해 셀렉터를 이용한다
	 * 
	 * 셀렉터가 작업 처리 준비된 채널을 선택한다
	 * 채널이 작업처리가 필요할 경우 셀렉터에 통보하고, 설렉터는 통보한 채널을 선택한다
	 * 
	 * 멀티 채널 작업을 싱글 스레드에서 처리할 수 있다.
	 * 작업 스레드가 블로킹되지 않기 때문에 셀렉터가 선택한 채널들을 싱글 스레드에서 모두 처리할 수 있다.
	 * 
	 */
	
	//셀렉터 동작 원리
	
	/*
	 * 채널은 자신의 작업 유형을 키로 생성한다
	 * 셀렉터의 관심키셋에 키를 등록한다.
	 * 셀렉터는 작업 처리 준비가된 키를 선택하고 선택된 키셋에 별도로 저장한다
	 * 작업 스레드는 선택된 키셋에서 키를 하나씩 꺼내어 연관된 채널 작업을 처리한다.
	 * 
	 */
	
	
}
